/*!
Frontsize: http://frontsize.com
GitHub:    https://github.com/ideatosrl/frontsize-sass
License:   MIT Licence
Version:   4.0.0
Date:      2016-10-10
Authors:   Vittorio Vittori, Carla Soloperto, Alessandro Minoccheri
*/
/*
  @a-pollo-doc
  @author: Vittorio Vittori
  @category: Functions
  @code: Usage example
    .selector {
      width: scale-value(40px, 0.5);
    }
  @css: The CSS generated
    .selector {
      width: 20px;
    }
  @date: 2017-01-05T15:01:54+01:00
  @type: function
  @icon: fa fa-terminal
  @name: scale-value
  @param: {unit-value} ($value) [required]
          The unit value to be scaled, es: `10px`, `2em`, etc.
  @param: {number} ($scale) [required]
          The scale number to change the value, es: `0.5`, `1`, `1.75`, etc.
  @public: true
  @returns: unit-value
  @text: Scales unit values passed, the return value will be rounded.
  @version: 4.0.0
*/
/*
  @a-pollo-doc
  @author: Vittorio Vittori
  @category: BEM
  @code: Example on using the mixin with some static property
    @include block (button) {
      background: #3f6c44;
      color: #fff;
      display: inline-block;
      font-size: 12px;
      padding: 4px 8px;
    }
  @css: This is the CSS generated
    .button {
      background: #3f6c44;
      color: #fff;
      display: inline-block;
      font-size: 12px;
      padding: 4px 8px;
    }
  @date: 2016-12-28T17:40:42+01:00
  @type: mixin
  @html: A simple HTML element to see how mixin works
    <a class="button" href="#">Visit this link</a>
  @icon: fa fa-css3
  @name: block
  @param: {string} ($block-name) [required]
          Defines the block name of the BEM component
  @public: true
  @returns: css
  @text: Defines the block name of the BEM component. This mixin is required as wrapper of `element` and `modifier` mixins
  @version: 4.0.0
*/
/*
  @a-pollo-doc
  @author: Vittorio Vittori
  @category: BEM
  @code: You must wrap `element` mixin inside `block` mixin
    @include block (button) {
      background: #3f6c44;
      display: inline-block;
      padding: 4px 8px;

      @include element (text) {
        color: #fff;
        font-size: 12px;
      }
    }
  @css: The CSS generated will keep everything on 1 class level deep
    .button {
      background: #3f6c44;
      display: inline-block;
      padding: 4px 8px;
    }
    .button__text {
      color: #fff;
      font-size: 12px;
    }
  @date: 2016-12-28T18:09:00+01:00
  @type: mixin
  @html: Elements should be inside a parent block
    <a class="button" href="#">
      <span class="button__text">Visit this link</span>
    </a>
  @icon: fa fa-css3
  @name: element
  @param: {string} ($element-name) [required]
          Defines the element name of the BEM component
  @public: true
  @returns: css
  @text: Defines the element name of the BEM component. This mixin is required as wrapped inside `block` mixin
  @version: 4.0.0
*/
/*
  @a-pollo-doc
  @author: Vittorio Vittori
  @category: BEM
  @code: Modifiers can be applied to `block` or `element` mixins
    @include block (button) {
      background: #3f6c44;
      color: #fff;
      display: inline-block;
      font-size: 12px;
      padding: 4px 8px;

      @include modifier (error) {
        background: #f02052;
      }
    }
  @css:
    .button {
      background: #3f6c44;
      color: #fff;
      display: inline-block;
      font-size: 12px;
      padding: 4px 8px;
    }
    .button--error {
      background: #f02052;
    }
  @date: 2016-12-28T18:09:00+01:00
  @type: mixin
  @html: Remember to keep the modifier's original block or element selector
    <a class="button button--error" href="#">Click here to report the error</a>
  @icon: fa fa-css3
  @name: modifier
  @param: {string} ($modifier-name) [required]
          Defines the modifier name of the BEM component
  @public: true
  @returns: css
  @text: Defines the modifier name of the BEM component. This mixin is required as wrapped inside `block` mixin
  @version: 4.0.0
*/
@font-face {
  font-family: 'grusp';
  font-weight: 400;
  src: url("/fonts/grusp/grusp.ttf") format("truetype");
}

[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "grusp";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}
